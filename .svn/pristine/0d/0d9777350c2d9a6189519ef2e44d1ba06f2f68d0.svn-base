package com.gxs.controller;

import com.gxs.enumerate.StoreRoles;
import com.gxs.pojo.*;
import com.gxs.service.GoodsService;
import com.gxs.service.StockService;
import com.gxs.service.StoreService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import javax.servlet.http.HttpSession;

import java.util.List;

import static com.gxs.controller.EmployeeController.findStoreIdBySession;

/**
 * @author 皮皮桂
 * @site guixiansong.com
 * @company 皮皮桂软件开发科技有限公司
 * @create 2020-04-17 2:59
 */
@Controller
@RequestMapping("/stock")
public class StockController {
    private final static Logger LOGGER= LoggerFactory.getLogger(StockController.class);
    @Autowired
    private StockService stockService;
    @Autowired
    private StoreService storeService;
    @Autowired
    private GoodsService goodsService;
    /**
     * 查询本店所有的库存信息
     */
    @RequestMapping("/findStockByStoreId")
    public String findStockByStoreId(HttpSession session, Model model, @RequestParam(value = "currentPage",defaultValue = "1",required = false) int currentPage){
        Long storeId=findStoreIdBySession(session);
        PageBean<Stock> pageBean=stockService.findByPage(currentPage,storeId);
        if (pageBean.getTotalCount()==0){
            pageBean.setCurrPage(0);
        }
        model.addAttribute("pagemsg",pageBean);

        //查询所有的店铺（为下拉框做准备）
        List<Store> list=storeService.findAllStoreForSelect();
        model.addAttribute("selectList",list);
        String roles=findRolesByStoreId(storeId);
        return toMyStockByRoles(roles);
    }


    /**
     * 跳向添加库存信息页面
     * @param model
     * @return
     */
    @RequestMapping("/toAddStockInfo")
    public String toAddStockInfo(Model model){
        List<Goods> goodsList=goodsService.findAll();
        List<Store> storeList=storeService.selectAllStore();
        model.addAttribute("goodsList",goodsList);
        model.addAttribute("storeList",storeList);
        return "view/goods/stock/addStock";
    }


    @RequestMapping("/addStockInfo")
    public String addStockInfo(Stock stock){
        stockService.addStockInfo(stock);
        return "redirect:findStockByStoreId.do";
    }

    /**
     * 根据id查询对应的信息
     * @param id
     * @param model
     * @param currentPage
     * @return
     */
    @RequestMapping("/selectStockInfoById")
    public String selectStockInfoById(Long id,Model model, @RequestParam(value = "currentPage",defaultValue = "1",required = false) int currentPage){
        LOGGER.info("+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
        PageBean<Stock> pageBean=stockService.findByPage(currentPage,id);
        if (pageBean.getTotalCount()==0){
            pageBean.setCurrPage(0);
        }
        model.addAttribute("pagemsg",pageBean);
        //查询所有的店铺（为下拉框做准备）
        List<Store> list=storeService.findAllStoreForSelect();
        model.addAttribute("selectList",list);
        LOGGER.info("---------------------------------------------------------------------------------------------------------------------");
        LOGGER.info(""+list.size());
        return "head_office/goods/stock/stock";
    }


    /**
     * 根据角色跳到自己的员工界面
     * @param roles
     * @return
     */
    public String toMyStockByRoles(String roles){
        if (roles.equals(StoreRoles.HEADOFFICE.getName())){
            return "head_office/goods/stock/stock";
        }
        if (roles.equals(StoreRoles.BRANCH.getName())){
            return "view/goods/stock/stock";
        }
        return "";
    }

    /**
     * 根据店铺id查询店铺角色（总店/分店）
     * @param storeId
     * @return
     */
    public String findRolesByStoreId(Long storeId){
        PageBean<Store> pageBean=storeService.selectStoreInfoById(1,storeId);
        String roles=pageBean.getLists().get(0).getRoles();
        return roles;
    }
}
