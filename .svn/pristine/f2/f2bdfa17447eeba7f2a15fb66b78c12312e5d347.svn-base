package com.gxs.service.impl;

import com.gxs.dao.StockDao;
import com.gxs.pojo.PageBean;
import com.gxs.pojo.Stock;
import com.gxs.service.StockService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.HashMap;
import java.util.List;

/**
 * @author 皮皮桂
 * @site guixiansong.com
 * @company 皮皮桂软件开发科技有限公司
 * @create 2020-04-17 3:00
 */
@Service
public class StockServiceImpl implements StockService {
    @Autowired
    private StockDao stockDao;
    @Override
    public PageBean<Stock> findByPage(int currentPage, Long storeId) {
        HashMap<String,Object> map=new HashMap<String, Object>();
        PageBean<Stock> pageBean=new PageBean<Stock>();

        //封装当前页数
        pageBean.setCurrPage(currentPage);

        //每页显示的条数
        int pageSize=5;
        pageBean.setPageSize(pageSize);

        //封装总记录数
        int totalCount=stockDao.selectCount(storeId);
        pageBean.setTotalCount(totalCount);

        //封装总页数
        double tc=totalCount;
        Double num=Math.ceil(tc/pageSize);//向上取整
        pageBean.setTotalPage(num.intValue());

        map.put("start",(currentPage-1)*pageSize);
        map.put("size",pageBean.getPageSize());
        map.put("storeId",storeId);

        //封装每页显示的数据
        List<Stock> list=stockDao.findByPage(map);
        pageBean.setLists(list);

        return pageBean;
    }

    @Override
    public void addStockInfo(Stock stock) {
        stockDao.addStockInfo(stock);
    }

    @Override
    public PageBean<Stock> countInStockInfoPage(int currentPage, Long storeId, String year, String month) {
        HashMap<String,Object> map=new HashMap<String, Object>();
        PageBean<Stock> pageBean=new PageBean<Stock>();

        //封装当前页数
        pageBean.setCurrPage(currentPage);

        //每页显示的条数
        int pageSize=5;
        pageBean.setPageSize(pageSize);

        map.put("storeId",storeId);
        map.put("stockDate",year+"-"+month+"%");
        //封装总记录数
        int totalCount=stockDao.selectCount2(map);
        pageBean.setTotalCount(totalCount);

        //封装总页数
        double tc=totalCount;
        Double num=Math.ceil(tc/pageSize);//向上取整
        pageBean.setTotalPage(num.intValue());

        map.put("start",(currentPage-1)*pageSize);
        map.put("size",pageBean.getPageSize());
        map.put("storeId",storeId);

        //封装每页显示的数据
        List<Stock> list=stockDao.findByPage2(map);
        pageBean.setLists(list);

        return pageBean;
    }

    @Override
    public PageBean<Stock> countOutStockInfoPage(int currentPage, Long storeId, String year, String month) {
        HashMap<String,Object> map=new HashMap<String, Object>();
        PageBean<Stock> pageBean=new PageBean<Stock>();

        //封装当前页数
        pageBean.setCurrPage(currentPage);

        //每页显示的条数
        int pageSize=5;
        pageBean.setPageSize(pageSize);

        map.put("storeId",storeId);
        map.put("stockDate",year+"-"+month+"%");
        //封装总记录数
        int totalCount=stockDao.selectCountOutStock(map);
        pageBean.setTotalCount(totalCount);

        //封装总页数
        double tc=totalCount;
        Double num=Math.ceil(tc/pageSize);//向上取整
        pageBean.setTotalPage(num.intValue());

        map.put("start",(currentPage-1)*pageSize);
        map.put("size",pageBean.getPageSize());
        map.put("storeId",storeId);

        //封装每页显示的数据
        List<Stock> list=stockDao.findByPageOutStock(map);
        pageBean.setLists(list);

        return pageBean;
    }
}
